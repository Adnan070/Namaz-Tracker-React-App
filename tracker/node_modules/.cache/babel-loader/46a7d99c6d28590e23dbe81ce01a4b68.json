{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Carear\\\\React\\\\namaz-tracer\\\\Namaz-Tracker-React-App\\\\tracker\\\\src\\\\pages\\\\Login\\\\index.jsx\";\nimport React from \"react\";\nimport { Container, Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\nimport { loginUser } from \"../../redux/actions/userAction\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\"; // import \"../App.css\";\n\nconst initialValues = {\n  email: \"\",\n  pass: \"\"\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\n  pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\")\n});\n\nfunction Login(props) {\n  const onSubmit = e => {\n    e.pre;\n    console.log(e); // props.loginUser();\n  };\n\n  if (props.authenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: Logo,\n                style: {\n                  width: \"100px\"\n                },\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center tracker-logo-heading\",\n                children: \"Namaz Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: e => onSubmit(e),\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    name: \"email\" // {...formik.getFieldProps('pass')}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    name: \"pass\" // {...formik.getFieldProps('pass')}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    width: \"100%\"\n                  } // disabled={!formik.isValid}\n                  ,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\n\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  const {\n    authenticated\n  } = state;\n  return {\n    authenticated\n  };\n}\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/pages/Login/index.jsx"],"names":["React","Container","Row","Col","Card","Image","Form","Button","bindActionCreators","connect","Redirect","Logo","loginUser","Formik","ErrorMessage","Yup","initialValues","email","pass","validationSchema","object","string","required","length","Login","props","onSubmit","e","pre","console","log","authenticated","height","width","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// import \"../App.css\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  pass: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\r\n  pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const onSubmit = (e) => {\r\n    e.pre\r\n    console.log(e);\r\n    // props.loginUser();\r\n  };\r\n\r\n  if (props.authenticated) {\r\n    return <Redirect to=\"/register\" />;\r\n  } else {\r\n    return (\r\n      <Container fluid className=\"welcome\">\r\n        <Row style={{ height: \"100px\" }}></Row>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center\">\r\n                <Image src={Logo} style={{ width: \"100px\" }} rounded />\r\n                <Card.Title className=\"text-center tracker-logo-heading\">\r\n                  Namaz Tracker\r\n                </Card.Title>\r\n              </Card.Body>\r\n\r\n              <Card.Body>\r\n                {/* <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  // onSubmit={onSubmit}\r\n                > */}\r\n                  {/* {(formik) => ( */}\r\n                    <Form onSubmit={(e) => onSubmit(e)}>\r\n                      <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          placeholder=\"Enter email\"\r\n                          name=\"email\"\r\n                          // {...formik.getFieldProps('pass')}\r\n                        />\r\n                        {/* <ErrorMessage name=\"email\">\r\n                          {(error) => (\r\n                            <div style={{ color: \"red\" }}>{error}</div>\r\n                          )}\r\n                        </ErrorMessage> */}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          name=\"pass\"\r\n                          // {...formik.getFieldProps('pass')}\r\n                        />\r\n                        {/* <ErrorMessage name=\"pass\">\r\n                          {(error) => (\r\n                            <div style={{ color: \"red\" }}>{error}</div>\r\n                          )}\r\n                        </ErrorMessage> */}\r\n                      </Form.Group>\r\n                      {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                      </Form.Group> */}\r\n\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        style={{ width: \"100%\" }}\r\n                        // disabled={!formik.isValid}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Form>\r\n                  {/* )}\r\n                </Formik> */}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\r\nfunction mapStateToProps(state) {\r\n  const { authenticated } = state;\r\n  return {\r\n    authenticated,\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      loginUser,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}