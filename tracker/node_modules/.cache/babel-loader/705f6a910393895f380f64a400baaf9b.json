{"ast":null,"code":"import { SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USERS, SET_USER, SET_ERRORS, CLEAR_ERRORS } from \"./types\";\nimport axios from '../../config';\nexport const loginUser = credentials => async dispatch => {\n  let data = await axios.post('/login', credentials);\n  console.log(data);\n  dispatch({\n    type: LOADING_USERS\n  });\n\n  if (credentials.email === \"\" || credentials.pass === \"\") {\n    dispatch({\n      type: SET_ERRORS,\n      payload: 'Input Field could not be empty!'\n    });\n  }\n\n  if (data.data.user) {\n    dispatch({\n      type: SET_USER,\n      payload: data.data.user\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: SET_AUTHENTICATED\n    });\n  } else {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Authentication Failed Please input correct Credentials...\"\n    });\n  }\n};","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/redux/actions/userAction.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USERS","SET_USER","SET_ERRORS","CLEAR_ERRORS","axios","loginUser","credentials","dispatch","data","post","console","log","type","email","pass","payload","user"],"mappings":"AAAA,SACEA,iBADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,YANF,QAOO,SAPP;AAQA,OAAOC,KAAP,MAAkB,cAAlB;AAGA,OAAO,MAAMC,SAAS,GAAKC,WAAD,IAAiB,MAAOC,QAAP,IAAoB;AAC7D,MAAIC,IAAI,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,QAAX,EAAoBH,WAApB,CAAjB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAD,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEZ;AADC,GAAD,CAAR;;AAIA,MAAIM,WAAW,CAACO,KAAZ,KAAsB,EAAtB,IAA4BP,WAAW,CAACQ,IAAZ,KAAqB,EAArD,EAAyD;AACvDP,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,UADC;AAEPa,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;;AACD,MAAIP,IAAI,CAACA,IAAL,CAAUQ,IAAd,EAAoB;AAClBT,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,QADC;AAEPc,MAAAA,OAAO,EAAEP,IAAI,CAACA,IAAL,CAAUQ;AAFZ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACD,GARD,MASK;AACHS,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,UADC;AAEPa,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CA5BM","sourcesContent":["import {\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USERS,\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n} from \"./types\";\r\nimport axios from '../../config';\r\n\r\n\r\nexport const loginUser =  (credentials) => async (dispatch) => {\r\n  let data = await axios.post('/login',credentials);\r\n  console.log(data)\r\n  dispatch({\r\n    type: LOADING_USERS,\r\n  });\r\n\r\n  if (credentials.email === \"\" || credentials.pass === \"\") {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: 'Input Field could not be empty!'\r\n    })\r\n  } \r\n  if (data.data.user) {\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: data.data.user,\r\n    });\r\n\r\n    dispatch({ type: CLEAR_ERRORS });\r\n    dispatch({ type: SET_AUTHENTICATED });\r\n  } \r\n  else {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: \"Authentication Failed Please input correct Credentials...\",\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}