{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Carear\\\\React\\\\namaz-tracer\\\\Namaz-Tracker-React-App\\\\tracker\\\\src\\\\pages\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\nimport { loginUser } from \"../../redux/actions/userAction\"; // import { Formik, ErrorMessage } from \"formik\";\n// import * as Yup from \"yup\";\n// import \"../App.css\";\n// const initialValues = {\n//   email: \"\",\n//   pass: \"\",\n// };\n// const validationSchema = Yup.object({\n//   email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\n//   pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\"),\n// });\n\nfunction Login(props) {\n  _s();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let {\n      target\n    } = e;\n    let credential = {\n      email: target[0].value,\n      pass: target[1].value\n    };\n    console.log(credential);\n    props.loginUser(credential);\n  };\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  if (props.authenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: Logo,\n                style: {\n                  width: \"100px\"\n                },\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center tracker-logo-heading\",\n                children: \"Namaz Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: e => onSubmit(e),\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    name: \"email\" // {...formik.getFieldProps('pass')}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    name: \"pass\" // {...formik.getFieldProps('pass')}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    width: \"100%\"\n                  } // disabled={!formik.isValid}\n                  ,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\n\n\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  const {\n    authenticated\n  } = state;\n  return {\n    authenticated\n  };\n}\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/pages/Login/index.jsx"],"names":["React","Container","Row","Col","Card","Image","Form","Button","bindActionCreators","connect","Redirect","Logo","loginUser","Login","props","onSubmit","e","preventDefault","target","credential","email","value","pass","console","log","useEffect","effect","cleanup","input","authenticated","height","width","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,QAQO,iBARP;AASA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI;AAACC,MAAAA;AAAD,QAAWF,CAAf;AACA,QAAIG,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG,KADF;AAEfC,MAAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUG;AAFD,KAAjB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAL,IAAAA,KAAK,CAACF,SAAN,CAAgBO,UAAhB;AACD,GATD;;AAWAM,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM;AACN,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;;AAOA,MAAId,KAAK,CAACe,aAAV,EAAyB;AACvB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAEnB,IAAZ;AAAkB,gBAAA,KAAK,EAAE;AAAEoB,kBAAAA,KAAK,EAAE;AAAT,iBAAzB;AAA6C,gBAAA,OAAO;AAApD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,kCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAA,qCAOE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAGf,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAA/B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,gBAAtB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,OADP;AAEE,oBAAA,WAAW,EAAC,aAFd;AAGE,oBAAA,IAAI,EAAC,OAHP,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,mBAAtB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,WAAW,EAAC,UAFd;AAGE,oBAAA,IAAI,EAAC,MAHP,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,eAkCE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,SADV;AAEE,kBAAA,IAAI,EAAC,QAFP;AAGE,kBAAA,KAAK,EAAE;AAAEe,oBAAAA,KAAK,EAAE;AAAT,mBAHT,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAkEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAlEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyED;AACF;AAED;AACA;AACA;AACA;AACA;;;GAtGSlB,K;;KAAAA,K;;AAuGT,SAASmB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEJ,IAAAA;AAAF,MAAoBI,KAA1B;AACA,SAAO;AACLJ,IAAAA;AADK,GAAP;AAGD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASK,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO3B,kBAAkB,CACvB;AACEI,IAAAA;AADF,GADuB,EAIvBuB,QAJuB,CAAzB;AAMD;;AAED,eAAe1B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\n// import { Formik, ErrorMessage } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import \"../App.css\";\r\n\r\n// const initialValues = {\r\n//   email: \"\",\r\n//   pass: \"\",\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n//   email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\r\n//   pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\"),\r\n// });\r\n\r\nfunction Login(props) {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let {target} = e;\r\n    let credential = {\r\n      email: target[0].value,\r\n      pass: target[1].value,\r\n    };\r\n    console.log(credential);\r\n    props.loginUser(credential);\r\n  };\r\n\r\n  useEffect(() => {\r\n    effect\r\n    return () => {\r\n      cleanup\r\n    }\r\n  }, [input])\r\n\r\n  if (props.authenticated) {\r\n    return <Redirect to=\"/register\" />;\r\n  } else {\r\n    return (\r\n      <Container fluid className=\"welcome\">\r\n        <Row style={{ height: \"100px\" }}></Row>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center\">\r\n                <Image src={Logo} style={{ width: \"100px\" }} rounded />\r\n                <Card.Title className=\"text-center tracker-logo-heading\">\r\n                  Namaz Tracker\r\n                </Card.Title>\r\n              </Card.Body>\r\n\r\n              <Card.Body>\r\n                {/* <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  // onSubmit={onSubmit}\r\n                > */}\r\n                {/* {(formik) => ( */}\r\n                <Form onSubmit={(e) => onSubmit(e)}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                      // {...formik.getFieldProps('pass')}\r\n                    />\r\n                    {/* <ErrorMessage name=\"email\">\r\n                          {(error) => (\r\n                            <div style={{ color: \"red\" }}>{error}</div>\r\n                          )}\r\n                        </ErrorMessage> */}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"pass\"\r\n                      // {...formik.getFieldProps('pass')}\r\n                    />\r\n                    {/* <ErrorMessage name=\"pass\">\r\n                          {(error) => (\r\n                            <div style={{ color: \"red\" }}>{error}</div>\r\n                          )}\r\n                        </ErrorMessage> */}\r\n                  </Form.Group>\r\n                  {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                      </Form.Group> */}\r\n\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    style={{ width: \"100%\" }}\r\n                    // disabled={!formik.isValid}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n                {/* )}\r\n                </Formik> */}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\r\nfunction mapStateToProps(state) {\r\n  const { authenticated } = state;\r\n  return {\r\n    authenticated,\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      loginUser,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}