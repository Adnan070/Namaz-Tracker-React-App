{"ast":null,"code":"import { SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USERS, SET_USER, SET_ERRORS, CLEAR_ERRORS } from \"./types\";\nimport axios from '../../config';\nexport const loginUser = credentials => async dispatch => {\n  let data = await axios.post('/login', credentials);\n  console.log(object);\n  dispatch({\n    type: LOADING_USERS\n  });\n\n  if (email === \"\" || pass === \"\") {\n    dispatch({\n      type: SET_ERRORS,\n      payload: 'Input Field could not be empty!'\n    });\n  } else if (email === \"adnanjutt@gmail.com\" && pass === \"123456\") {\n    dispatch({\n      type: SET_USER,\n      payload: {\n        name: \"adnan\",\n        phno: \"0342252323\",\n        address: \"128 / 15 majeed SRE karachi\",\n        email,\n        pass\n      }\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: SET_AUTHENTICATED\n    });\n  } else {\n    dispatch({\n      type: SET_ERRORS,\n      payload: \"Authentication Failed Please input correct Credentials...\"\n    });\n  }\n};","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/redux/actions/userAction.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USERS","SET_USER","SET_ERRORS","CLEAR_ERRORS","axios","loginUser","credentials","dispatch","data","post","console","log","object","type","email","pass","payload","name","phno","address"],"mappings":"AAAA,SACEA,iBADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,YANF,QAOO,SAPP;AAQA,OAAOC,KAAP,MAAkB,cAAlB;AAGA,OAAO,MAAMC,SAAS,GAAKC,WAAD,IAAiB,MAAOC,QAAP,IAAoB;AAC7D,MAAIC,IAAI,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,QAAX,EAAoBH,WAApB,CAAjB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAL,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEb;AADC,GAAD,CAAR;;AAIA,MAAIc,KAAK,KAAK,EAAV,IAAgBC,IAAI,KAAK,EAA7B,EAAiC;AAC/BR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,UADC;AAEPc,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD,MAKO,IAAIF,KAAK,KAAK,qBAAV,IAAmCC,IAAI,KAAK,QAAhD,EAA0D;AAG/DR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,QADC;AAEPe,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,IAAI,EAAE,YAFC;AAGPC,QAAAA,OAAO,EAAE,6BAHF;AAIPL,QAAAA,KAJO;AAKPC,QAAAA;AALO;AAFF,KAAD,CAAR;AAUAR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACD,GAfM,MAeA;AACLS,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,UADC;AAEPc,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAjCM","sourcesContent":["import {\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USERS,\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n} from \"./types\";\r\nimport axios from '../../config';\r\n\r\n\r\nexport const loginUser =  (credentials) => async (dispatch) => {\r\n  let data = await axios.post('/login',credentials);\r\n  console.log(object)\r\n  dispatch({\r\n    type: LOADING_USERS,\r\n  });\r\n\r\n  if (email === \"\" || pass === \"\") {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: 'Input Field could not be empty!'\r\n    })\r\n  } else if (email === \"adnanjutt@gmail.com\" && pass === \"123456\") {\r\n\r\n\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: {\r\n        name: \"adnan\",\r\n        phno: \"0342252323\",\r\n        address: \"128 / 15 majeed SRE karachi\",\r\n        email,\r\n        pass\r\n      },\r\n    });\r\n    dispatch({ type: CLEAR_ERRORS });\r\n    dispatch({ type: SET_AUTHENTICATED });\r\n  } else {\r\n    dispatch({\r\n      type: SET_ERRORS,\r\n      payload: \"Authentication Failed Please input correct Credentials...\",\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}