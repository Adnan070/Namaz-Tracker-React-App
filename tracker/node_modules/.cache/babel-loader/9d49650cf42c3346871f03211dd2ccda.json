{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Carear\\\\React\\\\namaz-tracer\\\\Namaz-Tracker-React-App\\\\tracker\\\\src\\\\pages\\\\Login\\\\index.jsx\";\nimport React from \"react\";\nimport { Container, Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\nimport { loginUser } from \"../../redux/actions/userAction\";\nimport Formik from \"formik\"; // import \"../App.css\";\n\nconst initialValues = {\n  name: 'Vishwas',\n  email: ''\n};\n\nfunction Login(props) {\n  const authenticate = () => {\n    props.loginUser();\n  };\n\n  if (props.authenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: Logo,\n                style: {\n                  width: \"100px\"\n                },\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center tracker-logo-heading\",\n                children: \"Namaz Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicEmail\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"email\",\n                      placeholder: \"Enter email\",\n                      name: \"email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                      className: \"text-muted\",\n                      children: \"We'll never share your email with anyone else.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicPassword\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      name: \"pass\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"formBasicCheckbox\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      label: \"Check me out\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: authenticate,\n                    style: {\n                      width: \"100%\"\n                    },\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\n\n\n_c = Login;\n\nfunction mapStateToProps(state) {\n  const {\n    authenticated\n  } = state;\n  return {\n    authenticated\n  };\n}\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/pages/Login/index.jsx"],"names":["React","Container","Row","Col","Card","Image","Form","Button","bindActionCreators","connect","Redirect","Logo","loginUser","Formik","initialValues","name","email","Login","props","authenticate","authenticated","height","width","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\nimport Formik from \"formik\";\r\n\r\n// import \"../App.css\";\r\n\r\n\r\nconst initialValues = {\r\n  name: 'Vishwas',\r\n  email: '',\r\n  \r\n}\r\n\r\n\r\nfunction Login(props) {\r\n  const authenticate = () => {\r\n    props.loginUser();\r\n  };\r\n\r\n  if (props.authenticated) {\r\n    return <Redirect to=\"/register\" />;\r\n  } else {\r\n    return (\r\n      <Container fluid className=\"welcome\">\r\n        <Row style={{ height: \"100px\" }}></Row>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center\">\r\n                <Image src={Logo} style={{ width: \"100px\" }} rounded />\r\n                <Card.Title className=\"text-center tracker-logo-heading\">\r\n                  Namaz Tracker\r\n                </Card.Title>\r\n              </Card.Body>\r\n\r\n              <Card.Body>\r\n                <Formik>\r\n                  <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n                      <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control type=\"password\" placeholder=\"Password\" name=\"pass\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={authenticate}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      Login\r\n                    </Button>\r\n                  </Form>\r\n                </Formik>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\r\nfunction mapStateToProps(state) {\r\n  const { authenticated } = state;\r\n  return {\r\n    authenticated,\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      loginUser,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}