{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Carear\\\\React\\\\namaz-tracer\\\\Namaz-Tracker-React-App\\\\tracker\\\\src\\\\pages\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Container, Row, Col, Card, Image, Form, Button } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\nimport { loginUser } from \"../../redux/actions/userAction\";\nimport PropTypes from \"prop-types\"; // import * as Yup from \"yup\";\n\nimport \"../../App.css\"; // const validationSchema = Yup.object({\n//   email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\n//   pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\"),\n// });\n\nfunction Login(props) {\n  _s();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let {\n      target\n    } = e;\n    let credential = {\n      email: target[0].value,\n      pass: target[1].value\n    };\n    console.log(credential);\n    props.loginUser(credential);\n  };\n\n  useEffect(() => {\n    if (props.errors) {\n      console.trace(props.errors);\n    }\n  }, [props]);\n\n  if (props.authenticated) {\n    console.log(\"Success\");\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: Logo,\n                style: {\n                  width: \"100px\"\n                },\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center tracker-logo-heading\",\n                children: \"Namaz Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: e => onSubmit(e),\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    name: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    name: \"pass\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Login;\nLogin.prototype = {\n  error: PropTypes.string,\n  authenticated: PropTypes.bool\n};\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\n\nfunction mapStateToProps(state) {\n  const {\n    user,\n    UI\n  } = state;\n  return {\n    authenticated: user.authenticated,\n    errors: UI.errors\n  };\n}\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Carear/React/namaz-tracer/Namaz-Tracker-React-App/tracker/src/pages/Login/index.jsx"],"names":["React","useEffect","Container","Row","Col","Card","Image","Form","Button","bindActionCreators","connect","Redirect","Logo","loginUser","PropTypes","Login","props","onSubmit","e","preventDefault","target","credential","email","value","pass","console","log","errors","trace","authenticated","height","width","prototype","error","string","bool","mapStateToProps","state","user","UI","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,QAQO,iBARP;AASA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAaF,CAAjB;AACA,QAAIG,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG,KADF;AAEfC,MAAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUG;AAFD,KAAjB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAL,IAAAA,KAAK,CAACH,SAAN,CAAgBQ,UAAhB;AACD,GATD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,KAAK,CAACW,MAAV,EAAkB;AAChBF,MAAAA,OAAO,CAACG,KAAR,CAAcZ,KAAK,CAACW,MAApB;AACD;AACF,GAJQ,EAIN,CAACX,KAAD,CAJM,CAAT;;AAMA,MAAIA,KAAK,CAACa,aAAV,EAAyB;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD,MAGO;AACL,wBACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAElB,IAAZ;AAAkB,gBAAA,KAAK,EAAE;AAAEmB,kBAAAA,KAAK,EAAE;AAAT,iBAAzB;AAA6C,gBAAA,OAAO;AAApD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,kCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAGb,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAA/B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,gBAAtB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,OADP;AAEE,oBAAA,WAAW,EAAC,aAFd;AAGE,oBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,mBAAtB;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,WAAW,EAAC,UAFd;AAGE,oBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAmBE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,SADV;AAEE,kBAAA,IAAI,EAAC,QAFP;AAGE,kBAAA,KAAK,EAAE;AAAEa,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eA0CE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiDD;AACF;;GAxEQhB,K;;KAAAA,K;AA0ETA,KAAK,CAACiB,SAAN,GAAkB;AAChBC,EAAAA,KAAK,EAAEnB,SAAS,CAACoB,MADD;AAEhBL,EAAAA,aAAa,EAAEf,SAAS,CAACqB;AAFT,CAAlB;AAKA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAeF,KAArB;AACA,SAAO;AACLR,IAAAA,aAAa,EAAES,IAAI,CAACT,aADf;AAELF,IAAAA,MAAM,EAAEY,EAAE,CAACZ;AAFN,GAAP;AAID;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASa,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOhC,kBAAkB,CACvB;AACEI,IAAAA;AADF,GADuB,EAIvB4B,QAJuB,CAAzB;AAMD;;AAED,eAAe/B,OAAO,CAAC0B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CzB,KAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Image,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Logo from \"../../assets/img/logo-with-out-bg.png\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\nimport PropTypes from \"prop-types\";\r\n// import * as Yup from \"yup\";\r\nimport \"../../App.css\";\r\n\r\n// const validationSchema = Yup.object({\r\n//   email: Yup.string().email(\"Invalid Email Format\").required(\"Required\"),\r\n//   pass: Yup.string().length(6, \"Invalid Password\").required(\"Required!\"),\r\n// });\r\n\r\nfunction Login(props) {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let { target } = e;\r\n    let credential = {\r\n      email: target[0].value,\r\n      pass: target[1].value,\r\n    };\r\n    console.log(credential);\r\n    props.loginUser(credential);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.errors) {\r\n      console.trace(props.errors);\r\n    }\r\n  }, [props]);\r\n\r\n  if (props.authenticated) {\r\n    console.log(\"Success\");\r\n    return <Redirect to=\"/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <Container fluid className=\"welcome\">\r\n        <Row style={{ height: \"100px\" }}></Row>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body className=\"text-center\">\r\n                <Image src={Logo} style={{ width: \"100px\" }} rounded />\r\n                <Card.Title className=\"text-center tracker-logo-heading\">\r\n                  Namaz Tracker\r\n                </Card.Title>\r\n              </Card.Body>\r\n\r\n              <Card.Body>\r\n                <Form onSubmit={(e) => onSubmit(e)}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"pass\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.prototype = {\r\n  error: PropTypes.string,\r\n  authenticated: PropTypes.bool,\r\n};\r\n\r\n/**\r\n *\r\n * @param {Global State} state\r\n * bind state to the component props\r\n */\r\nfunction mapStateToProps(state) {\r\n  const { user, UI } = state;\r\n  return {\r\n    authenticated: user.authenticated,\r\n    errors: UI.errors,\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {Redux Actions} dispatch\r\n * bind actions to the component props\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      loginUser,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}